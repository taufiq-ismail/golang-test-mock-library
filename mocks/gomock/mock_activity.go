// Code generated by MockGen. DO NOT EDIT.
// Source: example/mock-library/activity (interfaces: Activity)

// Package mocks_gomocks is a generated GoMock package.
package mocks_gomocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockActivity is a mock of Activity interface.
type MockActivity struct {
	ctrl     *gomock.Controller
	recorder *MockActivityMockRecorder
}

// MockActivityMockRecorder is the mock recorder for MockActivity.
type MockActivityMockRecorder struct {
	mock *MockActivity
}

// NewMockActivity creates a new mock instance.
func NewMockActivity(ctrl *gomock.Controller) *MockActivity {
	mock := &MockActivity{ctrl: ctrl}
	mock.recorder = &MockActivityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActivity) EXPECT() *MockActivityMockRecorder {
	return m.recorder
}

// DoSomething mocks base method.
func (m *MockActivity) DoSomething(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoSomething indicates an expected call of DoSomething.
func (mr *MockActivityMockRecorder) DoSomething(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockActivity)(nil).DoSomething), arg0, arg1)
}
